{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setNewTitle","setNewDescription","setNewImgUrl","setNewImdbUrl","setNewImdbId","hasTitle","setTitleError","hasImgUrl","setImgUrlError","hasImdbUrl","setImdbUrlError","hasImdbId","setImdbIdError","hasCorrectImgUrl","setCorrectImgUrlError","hasCorrectImdbUrl","setCorrectImdbUrlError","buttonDisabled","setButtonDisabled","checkUrl","RegExp","newMovie","onSubmit","event","preventDefault","test","onChange","every","field","length","classNames","value","target","type","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25367b20.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setNewTitle] = useState('');\n  const [description, setNewDescription] = useState('');\n  const [imgUrl, setNewImgUrl] = useState('');\n  const [imdbUrl, setNewImdbUrl] = useState('');\n  const [imdbId, setNewImdbId] = useState('');\n  const [hasTitle, setTitleError] = useState(false);\n  const [hasImgUrl, setImgUrlError] = useState(false);\n  const [hasImdbUrl, setImdbUrlError] = useState(false);\n  const [hasImdbId, setImdbIdError] = useState(false);\n  const [hasCorrectImgUrl, setCorrectImgUrlError] = useState(false);\n  const [hasCorrectImdbUrl, setCorrectImdbUrlError] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n\n  // eslint-disable-next-line max-len\n  const checkUrl = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n  const newMovie: Movie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setImgUrlError(!imgUrl);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n\n    if (!title || !imdbUrl || !imdbUrl || !imdbId) {\n      setButtonDisabled(true);\n\n      return;\n    }\n\n    setCorrectImgUrlError(!checkUrl.test(imgUrl));\n    setCorrectImdbUrlError(!checkUrl.test(imdbUrl));\n\n    if (!checkUrl.test(imgUrl)) {\n      setCorrectImgUrlError(true);\n\n      return;\n    }\n\n    if (!checkUrl.test(imdbUrl)) {\n      setCorrectImdbUrlError(true);\n\n      return;\n    }\n\n    addMovie(newMovie);\n    setCorrectImgUrlError(false);\n    setCorrectImdbUrlError(false);\n    setNewTitle('');\n    setNewDescription('');\n    setNewImgUrl('');\n    setNewImdbUrl('');\n    setNewImdbId('');\n  };\n\n  const isAddReady = () => {\n    const requiredFields = [title, imgUrl, imdbUrl, imdbId];\n    const isButtonDisabled = requiredFields.every(field => field.length > 0);\n\n    if (isButtonDisabled) {\n      setButtonDisabled(false);\n    }\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={(event) => {\n        onSubmit(event);\n      }}\n      onChange={isAddReady}\n    >\n      <div className=\"field\">\n        <label className=\"label\">\n          Title\n          <input\n            className={classNames(\n              'form__title input',\n              { 'is-danger': hasImdbId },\n            )}\n            value={title}\n            onChange={event => {\n              setNewTitle(event.target.value);\n              setTitleError(false);\n            }}\n            data-cy=\"form-title\"\n          />\n        </label>\n        {\n          hasTitle\n          && <span className=\"error\">Please enter a title</span>\n        }\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          Description\n          <input\n            className=\"form__description input\"\n            value={description}\n            onChange={event => {\n              setNewDescription(event.target.value);\n            }}\n            data-cy=\"form-description\"\n          />\n        </label>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          IMG URL\n          <input\n            className={classNames(\n              'form__img-url input',\n              { 'is-danger': hasImdbId },\n            )}\n            value={imgUrl}\n            onChange={event => {\n              setNewImgUrl(event.target.value);\n              setImgUrlError(false);\n            }}\n            data-cy=\"form-imgUrl\"\n          />\n        </label>\n        {\n          hasImgUrl\n          && <span className=\"error\">Please enter an IMG URL</span>\n        }\n\n        {\n          hasCorrectImgUrl\n          && <span className=\"error\">Please enter correct IMG URL</span>\n        }\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          IMBD URL\n          <input\n            className={classNames(\n              'form__imdb-url input',\n              { 'is-danger': hasImdbId },\n            )}\n            value={imdbUrl}\n            onChange={event => {\n              setNewImdbUrl(event.target.value);\n              setImdbUrlError(false);\n            }}\n            data-cy=\"form-imdbUrl\"\n          />\n        </label>\n        {\n          hasImdbUrl\n          && <span className=\"error\">Please enter an IMBD URL</span>\n        }\n\n        {\n          hasCorrectImdbUrl\n          && <span className=\"error\">Please enter correct IMBD URL</span>\n        }\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          IMBD ID\n          <input\n            className={classNames(\n              'form__imdb-id input',\n              { 'is-danger': hasImdbId },\n            )}\n            value={imdbId}\n            onChange={event => {\n              setNewImdbId(event.target.value);\n              setImdbIdError(false);\n            }}\n            data-cy=\"form-imdbId\"\n          />\n        </label>\n        {\n          hasImdbId\n          && <span className=\"error\">Please enter an IMBD ID</span>\n        }\n      </div>\n\n      <button\n        className=\"button\"\n        type=\"submit\"\n        data-cy=\"form-submit-button\"\n        disabled={buttonDisabled}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    const {\n      title,\n      imdbId,\n      description,\n      imdbUrl,\n      imgUrl,\n    } = movie;\n    const newMovie: Movie = {\n      title,\n      imdbId,\n      description,\n      imdbUrl,\n      imgUrl,\n    };\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}