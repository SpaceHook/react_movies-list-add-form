{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","newTitle","setNewTitle","newDescription","setNewDescription","newImgUrl","setNewImgUrl","newImdbUrl","setNewImdbUrl","newImdbId","setNewImdbId","hasTitle","setTitleError","hasImgUrl","setImgUrlError","hasImdbUrl","setImdbUrlError","hasImdbId","setImdbIdError","hasCorrectImgUrl","setCorrectImgUrlError","hasCorrectImdbUrl","setCorrectImdbUrlError","buttonDisabled","setButtonDisabled","isButtonDisabled","every","field","length","checkUrl","RegExp","newMovie","onSubmit","event","preventDefault","test","onChange","classNames","value","target","type","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94675360.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void\n};\n\nexport const NewMovie: React.FC<Props> = ({ addMovie }) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [newImgUrl, setNewImgUrl] = useState('');\n  const [newImdbUrl, setNewImdbUrl] = useState('');\n  const [newImdbId, setNewImdbId] = useState('');\n  const [hasTitle, setTitleError] = useState(false);\n  const [hasImgUrl, setImgUrlError] = useState(false);\n  const [hasImdbUrl, setImdbUrlError] = useState(false);\n  const [hasImdbId, setImdbIdError] = useState(false);\n  const [hasCorrectImgUrl, setCorrectImgUrlError] = useState(false);\n  const [hasCorrectImdbUrl, setCorrectImdbUrlError] = useState(false);\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  const requiredFields = [newTitle, newImgUrl, newImdbUrl, newImdbId];\n  const isButtonDisabled = requiredFields.every(field => field.length > 0);\n  // eslint-disable-next-line max-len\n  const checkUrl = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n  const newMovie: Movie = {\n    title: newTitle,\n    description: newDescription,\n    imgUrl: newImgUrl,\n    imdbUrl: newImdbUrl,\n    imdbId: newImdbId,\n  };\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!newTitle);\n    setImgUrlError(!newImgUrl);\n    setImdbUrlError(!newImdbUrl);\n    setImdbIdError(!newImdbId);\n\n    if (!newTitle || !newImdbUrl || !newImdbUrl || !newImdbId) {\n      setButtonDisabled(true);\n\n      return;\n    }\n\n    if (!checkUrl.test(newImgUrl) || !checkUrl.test(newImdbUrl)) {\n      setCorrectImgUrlError(!checkUrl.test(newImgUrl));\n      setCorrectImdbUrlError(!checkUrl.test(newImdbUrl));\n\n      if (checkUrl.test(newImgUrl)) {\n        setCorrectImgUrlError(false);\n      }\n\n      if (checkUrl.test(newImdbUrl)) {\n        setCorrectImdbUrlError(false);\n      }\n\n      return;\n    }\n\n    addMovie(newMovie);\n    setCorrectImgUrlError(false);\n    setCorrectImdbUrlError(false);\n    setNewTitle('');\n    setNewDescription('');\n    setNewImgUrl('');\n    setNewImdbUrl('');\n    setNewImdbId('');\n  };\n\n  const isAddReady = () => {\n    if (isButtonDisabled) {\n      setButtonDisabled(false);\n    }\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={(event) => {\n        onSubmit(event);\n      }}\n      onChange={isAddReady}\n    >\n      <div className=\"field\">\n        <label className=\"label\">\n          Title\n          <input\n            className={classNames('form__title input',\n              { 'is-danger': hasImdbId })}\n            value={newTitle}\n            onChange={event => {\n              setNewTitle(event.target.value);\n              setTitleError(false);\n            }}\n            data-cy=\"form-title\"\n          />\n        </label>\n        {hasTitle && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          Description\n          <input\n            className=\"form__description input\"\n            value={newDescription}\n            onChange={event => {\n              setNewDescription(event.target.value);\n            }}\n            data-cy=\"form-description\"\n          />\n        </label>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          IMG URL\n          <input\n            className={classNames('form__img-url input',\n              { 'is-danger': hasImdbId })}\n            value={newImgUrl}\n            onChange={event => {\n              setNewImgUrl(event.target.value);\n              setImgUrlError(false);\n            }}\n            data-cy=\"form-imgUrl\"\n          />\n        </label>\n        {hasImgUrl && <span className=\"error\">Please enter an IMG URL</span>}\n        {hasCorrectImgUrl\n          && <span className=\"error\">Please enter correct IMG URL</span>}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          IMBD URL\n          <input\n            className={classNames('form__imdb-url input',\n              { 'is-danger': hasImdbId })}\n            value={newImdbUrl}\n            onChange={event => {\n              setNewImdbUrl(event.target.value);\n              setImdbUrlError(false);\n            }}\n            data-cy=\"form-imdbUrl\"\n          />\n        </label>\n        {hasImdbUrl && <span className=\"error\">Please enter an IMBD URL</span>}\n        {hasCorrectImdbUrl\n        && <span className=\"error\">Please enter correct IMBD URL</span>}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">\n          IMBD ID\n          <input\n            className={classNames('form__imdb-id input',\n              { 'is-danger': hasImdbId })}\n            value={newImdbId}\n            onChange={event => {\n              setNewImdbId(event.target.value);\n              setImdbIdError(false);\n            }}\n            data-cy=\"form-imdbId\"\n          />\n        </label>\n        {hasImdbId && <span className=\"error\">Please enter an IMBD ID</span>}\n      </div>\n\n      <button\n        className=\"button\"\n        type=\"submit\"\n        data-cy=\"form-submit-button\"\n        disabled={buttonDisabled}\n      >\n        Add movie\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    const newMovie: Movie = {\n      title: movie.title,\n      imdbId: movie.imdbId,\n      description: movie.description,\n      imdbUrl: movie.imdbUrl,\n      imgUrl: movie.imgUrl,\n    };\n\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}